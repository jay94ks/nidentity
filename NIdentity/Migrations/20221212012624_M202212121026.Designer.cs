// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIdentity;

#nullable disable

namespace NIdentity.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20221212012624_M202212121026")]
    partial class M202212121026
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NIdentity.Core.X509.Repositories.Models.DbCertificate", b =>
                {
                    b.Property<string>("KeySHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Issuer")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IssuerHash")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("IssuerKeyIdentifier")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("KeyIdentifier")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("RefSHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<int>("RevokeReason")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RevokeTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubjectHash")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("Thumbprint")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("KeySHA1")
                        .HasName("PK_ID");

                    b.HasIndex(new[] { "CreationTime" }, "BY_CTIME");

                    b.HasIndex(new[] { "Issuer" }, "BY_ISSUER");

                    b.HasIndex(new[] { "IssuerHash" }, "BY_ISSUER_HASH");

                    b.HasIndex(new[] { "IssuerKeyIdentifier" }, "BY_ISSUER_KEY");

                    b.HasIndex(new[] { "KeyIdentifier" }, "BY_KEY");

                    b.HasIndex(new[] { "RevokeReason" }, "BY_RCODE");

                    b.HasIndex(new[] { "RevokeTime" }, "BY_RTIME");

                    b.HasIndex(new[] { "SerialNumber" }, "BY_SERIAL_NUMBER");

                    b.HasIndex(new[] { "Subject" }, "BY_SUBJECT");

                    b.HasIndex(new[] { "SubjectHash" }, "BY_SUBJECT_HASH");

                    b.HasIndex(new[] { "ExpirationTime" }, "BY_XTIME");

                    b.HasIndex(new[] { "RefSHA1" }, "UK_RF")
                        .IsUnique();

                    b.HasIndex(new[] { "SubjectHash", "KeyIdentifier" }, "UK_SHK")
                        .IsUnique();

                    b.HasIndex(new[] { "SerialNumber", "IssuerHash" }, "UK_SIH")
                        .IsUnique();

                    b.HasIndex(new[] { "SerialNumber", "IssuerKeyIdentifier" }, "UK_SKI")
                        .IsUnique();

                    b.HasIndex(new[] { "Subject", "KeyIdentifier" }, "UK_SNK")
                        .IsUnique();

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("NIdentity.Core.X509.Repositories.Models.DbCertificateDocument", b =>
                {
                    b.Property<string>("KeySHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("PathName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("LONGTEXT");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastWriteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MimeType")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("ParentPathName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("RefSHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<long>("RevisionNumber")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("KeySHA1", "PathName")
                        .HasName("PK_ID");

                    b.HasIndex(new[] { "Access" }, "BY_ACCESS");

                    b.HasIndex(new[] { "CreationTime" }, "BY_CTIME")
                        .HasDatabaseName("BY_CTIME1");

                    b.HasIndex(new[] { "MimeType" }, "BY_MIME_TYPE");

                    b.HasIndex(new[] { "ParentPathName" }, "BY_PARENT");

                    b.HasIndex(new[] { "LastWriteTime" }, "BY_WCODE");

                    b.HasIndex(new[] { "RefSHA1", "PathName" }, "UK_RF")
                        .IsUnique()
                        .HasDatabaseName("UK_RF1");

                    b.ToTable("CertificateDocuments");
                });

            modelBuilder.Entity("NIdentity.Core.X509.Repositories.Models.DbCertificateStore", b =>
                {
                    b.Property<string>("KeySHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("Base64")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("RefSHA1")
                        .HasMaxLength(41)
                        .HasColumnType("varchar(41)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("KeySHA1")
                        .HasName("PK_ID");

                    b.HasIndex(new[] { "RefSHA1" }, "UK_RF")
                        .HasDatabaseName("UK_RF2");

                    b.ToTable("CertificateStores");
                });
#pragma warning restore 612, 618
        }
    }
}
